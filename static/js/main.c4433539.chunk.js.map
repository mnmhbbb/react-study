{"version":3,"sources":["components/Header.js","hooks/useFetch.js","components/DayList.js","components/Word.js","components/Day.js","components/CreateWord.js","components/CreateDay.js","App.js","index.js"],"names":["Header","className","to","useFetch","url","useState","data","setData","useEffect","fetch","then","res","json","DayList","days","length","map","v","day","id","Word","w","word","setWord","isDone","setIsDone","isShow","setIsShow","type","checked","onChange","method","headers","body","JSON","stringify","ok","eng","kor","onClick","window","confirm","Day","useParams","words","CreateWord","history","useHistory","isLoading","setIsLoading","engRef","useRef","korRef","dayRef","onSubmit","e","preventDefault","current","value","alert","push","required","ref","style","opacity","CreateDay","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4433539.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <h1>\n        <Link to=\"/\">영어 단어장</Link>\n      </h1>\n      <div className=\"menu\">\n        <Link to=\"/create_word\" className=\"link\">\n          단어 추가\n        </Link>\n        <Link to=\"/create_day\" className=\"link\">\n          Day 추가\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function useFetch(url) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setData(data);\n      });\n  }, [url]);\n\n  return data;\n}\n","import { Link } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\n\nexport default function DayList() {\n  const days = useFetch(\"http://localhost:3065/days\");\n\n  if (days.length === 0) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ul className=\"list_day\">\n      {days.map((v) => {\n        return (\n          <li key={v.id}>\n            <Link to={`/day/${v.day}`}>Day {v.day}</Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function Word({ word: w }) {\n  const [word, setWord] = useState(w);\n  const [isDone, setIsDone] = useState(word.isDone);\n  const [isShow, setIsShow] = useState(false);\n\n  function toggleDone() {\n    fetch(`http://localhost:3065/words/${word.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        ...word,\n        isDone: !isDone,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        setIsDone(!isDone);\n      }\n    });\n  }\n\n  function toggleIsShow() {\n    setIsShow(!isShow);\n  }\n\n  function del() {\n    if (window.confirm(\"삭제하시겠습니까?\")) {\n      fetch(`http://localhost:3065/words/${word.id}`, {\n        method: \"DELETE\",\n      }).then((res) => {\n        if (res.ok) {\n          setWord({ id: 0 });\n        }\n      });\n    }\n  }\n\n  if (word.id === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <tr className={isDone ? \"off\" : \"\"}>\n        <td>\n          <input type=\"checkbox\" checked={isDone} onChange={toggleDone} />\n        </td>\n        <td>{word.eng}</td>\n        <td>{isShow && word.kor}</td>\n        <td>\n          <button onClick={toggleIsShow}>\n            뜻 {isShow ? \"숨기기\" : \"보기\"}\n          </button>\n          <button onClick={del} className=\"btn_del\">\n            삭제\n          </button>\n        </td>\n      </tr>\n    </>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\nimport Word from \"./Word\";\n\nexport default function Day() {\n  const { day } = useParams();\n  const words = useFetch(`http://localhost:3065/words?day=${day}`);\n\n  return (\n    <>\n      <h2>Day{day}</h2>\n      {words.length === 0 && <span>Loading...</span>}\n      <table>\n        <tbody>\n          {words.map((v) => {\n            return <Word key={v.id} word={v} />;\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n","import { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\n\nexport default function CreateWord() {\n  const days = useFetch(\"http://localhost:3065/days\");\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const engRef = useRef(null);\n  const korRef = useRef(null);\n  const dayRef = useRef(null);\n\n  function onSubmitbtn(e) {\n    e.preventDefault();\n\n    if (!isLoading) {\n      setIsLoading(true);\n      fetch(\"http://localhost:3065/words/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          eng: engRef.current.value,\n          kor: korRef.current.value,\n          day: dayRef.current.value,\n          isDone: false,\n        }),\n      }).then((res) => {\n        if (res.ok) {\n          alert(\"저장되었습니다.\");\n          history.push(`day/${dayRef.current.value}`);\n          setIsLoading(false);\n        }\n      });\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmitbtn}>\n      <div className=\"input_area\">\n        <label>Eng</label>\n        <input type=\"text\" required ref={engRef}></input>\n      </div>\n      <div className=\"input_area\">\n        <label>Kor</label>\n        <input type=\"text\" required ref={korRef}></input>\n      </div>\n      <div className=\"input_area\">\n        <label>Day</label>\n        <select ref={dayRef}>\n          {days.map((v) => {\n            return (\n              <option key={v.id} value={v.value}>\n                {v.day}\n              </option>\n            );\n          })}\n        </select>\n        <button style={{ opacity: isLoading ? 0.3 : 1 }}>\n          {isLoading ? \"저장 중...\" : \"저장\"}\n        </button>\n      </div>\n    </form>\n  );\n}\n","import { useHistory } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\n\nexport default function CreateDay() {\n  const days = useFetch(\"http://localhost:3065/days\");\n  const history = useHistory();\n\n  function addDay() {\n    fetch(\"http://localhost:3065/days\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        day: days.length + 1,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        alert(\"추가되었습니다.\");\n        history.push(\"/\");\n      }\n    });\n  }\n\n  return (\n    <div>\n      <h3>현재 일수: {days.length}일</h3>\n      <button onClick={addDay}>Day 추가</button>\n    </div>\n  );\n}\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport DayList from \"./components/DayList\";\nimport Day from \"./components/Day\";\nimport CreateWord from \"./components/CreateWord\";\nimport CreateDay from \"./components/CreateDay\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <DayList />\n          </Route>\n          <Route path=\"/day/:day\">\n            <Day />\n          </Route>\n          <Route path=\"/create_word\">\n            <CreateWord />\n          </Route>\n          <Route path=\"/create_day\">\n            <CreateDay />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}